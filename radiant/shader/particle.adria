/*
 * radiant 2d webgl rendering engine
 * Copyright (C) 2014 Dennis MÃ¶hlmann <mail@dennismoehlmann.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var Shader = require('../shader');

module Particle = proto (Shader) {

    protected fragmentSrc: resource('./particle.fs'),
    protected vertexSrc: resource('./particle.vs'),

    /**
     * attributes
     */
    protected aStartTime      : null,
    protected aTimeToLive     : null,
    protected aStartSize      : null,
    protected aEndSize        : null,
    protected aOrigin         : null,
    protected aCorner         : null,
    protected aVelocity       : null,
    protected aAcceleration   : null,
    protected aAngle          : null,
    protected aRotation       : null,
    protected aColor          : null,

    /**
     * uniforms
     */
    protected uMatrix         : null,
    protected uScreenOffset   : null,
    protected uTexture        : null,
    protected uNow            : null,
    protected uRamp           : null,

    /**
     * register attributes and uniforms with the shader
     */
    protected register: func() {

        this.registerAttribute('aStartTime', 1, self::FLOAT);
        this.registerAttribute('aTimeToLive', 1, self::FLOAT);
        this.registerAttribute('aStartSize', 1, self::FLOAT);
        this.registerAttribute('aEndSize', 1, self::FLOAT);
        this.registerAttribute('aOrigin', 2, self::FLOAT);
        this.registerAttribute('aCorner', 2, self::FLOAT);
        this.registerAttribute('aVelocity', 1, self::FLOAT);
        this.registerAttribute('aAcceleration', 1, self::FLOAT);
        this.registerAttribute('aAngle', 1, self::FLOAT);
        this.registerAttribute('aRotation', 1, self::FLOAT);
        this.registerAttribute('aColor', 4, self::UNSIGNED_BYTE, true);

        this.registerUniform('uMatrix', Shader::FLOAT, 4, Shader::UNIFORM_MATRIX);
        this.registerUniform('uScreenOffset', Shader::FLOAT, 2, Shader::UNIFORM_VALUE);
        this.registerUniform('uTexture', Shader::INT, 1);
        this.registerUniform('uNow', Shader::FLOAT);
        this.registerUniform('uRamp');
    },
};
