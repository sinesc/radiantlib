/*
 * radiant 2d webgl rendering engine
 * Copyright (C) 2014 Dennis MÃ¶hlmann <mail@dennismoehlmann.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var Shader = require('../shader');

module Particle = proto (Shader) {

    fragmentSrc: resource('./particle.fs'),
    vertexSrc: resource('./particle.vs'),

    /**
     * attributes
     */
    aStartTime      : null,
    aTimeToLive     : null,
    aStartSize      : null,
    aEndSize        : null,
    aOrigin         : null,
    aCorner         : null,
    aVelocity       : null,
    aAcceleration   : null,
    aAngle          : null,
    aRotation       : null,
    aColor          : null,

    /**
     * uniforms
     */
    uMatrix         : null,
    uNow            : null,
    uTexture        : null,
    uRamp           : null,

    /**
     * register attributes and uniforms with the shader
     */
    register: func() {

        var gl = this.radiant.gl;

        this.registerAttribute('aStartTime', 1, gl.FLOAT);
        this.registerAttribute('aTimeToLive', 1, gl.FLOAT);
        this.registerAttribute('aStartSize', 1, gl.FLOAT);
        this.registerAttribute('aEndSize', 1, gl.FLOAT);
        this.registerAttribute('aOrigin', 2, gl.FLOAT);
        this.registerAttribute('aCorner', 2, gl.FLOAT);
        this.registerAttribute('aVelocity', 1, gl.FLOAT);
        this.registerAttribute('aAcceleration', 1, gl.FLOAT);
        this.registerAttribute('aAngle', 1, gl.FLOAT);
        this.registerAttribute('aRotation', 1, gl.FLOAT);
        this.registerAttribute('aColor', 4, gl.UNSIGNED_BYTE, true);

        this.registerUniform('uMatrix', 4, true);
        this.registerUniform('uNow', 1, false, true);
        this.registerUniform('uTexture');
        this.registerUniform('uRamp');
    },
};
