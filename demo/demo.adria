
var Radiant = require('radiant');
var Sprite = Radiant.Sprite;
var Sprites = Radiant.Sprites;
var Text = Radiant.Text;
var Color = Radiant.Color;
var Font = Radiant.Font;

var radiant = new Radiant(1280, 600);

document.body.appendChild(radiant.canvas);


/*
 * radiant 2d webgl rendering engine
 * Copyright (C) 2014 Dennis MÃ¶hlmann <mail@dennismoehlmann.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var sprite2 = new Sprite(radiant, 'naves_green_64x64x15.png');
var sprite = new Sprite(radiant, 'mine_green_64x64x15.png');
var font = new Font(radiant, '20px Tahoma');

font.on('load', func() {
    console.log('font loaded');
});

sprite2.on('load', func() {

    var sprites = new Sprites(radiant);
    var text = new Text(radiant);

    var gl = radiant.gl;

    gl.clearColor(0.0, 0.0, 0.0, 1.0);

    var color = new Color(255, 255, 255, 255);
    var angle = 0;
    var frame = 0;

    sprite.anchorU = 0.5;
    sprite.anchorV = 0.5;

    var time = Date.now();
    var frames = 0, fps = 0;

    setInterval(func() {
        gl.clear(gl.COLOR_BUFFER_BIT);

        radiant.blendMode = radiant.blendModes.OUTLINE;

        var numBg = 0;

        for (var x = 0; x <= 1280; x += 45) {
            for (var y = 0; y <= 600; y += 45) {
                color.r = x / 1280 * 255;
                color.g = 255 - y / 600 * 255;
                color.b = 255 - color.r;
                sprites.add(sprite, Math.floor(frame), x, y, color, angle, 1);
                numBg++;
            }
        }

        radiant.blendMode = radiant.blendModes.COPY;
        sprites.add(sprite, Math.floor(frame), 200, 200, Color.rgb(128, 255, 128), angle, (Math.cos(angle*4) + 1)*4);

        radiant.blendMode = radiant.blendModes.OUTLINE;
        sprites.add(sprite2, Math.floor(frame), 400, 400, Color.alpha(255), angle, (Math.sin(angle*4) + 1)*4);
        sprites.draw();

        if (font.ready) {
            radiant.blendMode = radiant.blendModes.COPY;
            text.write(font, 'FPS: ' + fps + ' BG Sprites: ' + numBg, 100, 100, Color.RED, angle);
            text.draw();
        }

        frame+=0.35;
        angle+=0.002;
        if (frame > 14) {
            frame = 0;
        }

        frames++;
        var now = Date.now();
        if (now > time + 1000) {
            time = now;
            fps = frames;
            frames = 0;
        }

    }, 16);
});